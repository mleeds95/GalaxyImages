Aristotle Info:
130.160.99.206
/Volumes/PROMISE PEGASUS/MUGS
Notes:
mugs.mcmaster.ca
physical units in pynbody
a = 1/(1+z), a is scale factor, z is redshift
first file is simulation info
-iord tells which particle (by unique id) is where in each file
-AHF is the halo finder that finds the galaxy in the simulation
-blue stars are younger, red are older
in galaxies, the dark matter, star particles and dust are the most important

Notes for what to do with output:
1. You can use the fitsio python package to look at the tables in the fits file from broadband, 
and find one of the CAMERAi-BROADBAND IMAGE-HDU's that you want to look at.
For example:
import fitsio
fits = fitsio.FITS('fname')
print(fits)
2. Using the astropy.io.fits module, you can do:
hdulist = fits.open(fname)
table = hdulist[i].data # where i is the extnum for FILTERS
print table['filter']
Looking at that, figure out the indices of the filters you're interested in.
3. Do an "hg clone http://bitbucket.org/lutorm/python" and go to the python directory.
Run "ipython --pylab"
import make_color, pyfits
f = pyfits.open(fname)
f.info() # to see headers
t = f['filters'].data
t['filter'] # see the list of filters
im = transpose(f['CAMERAi-BROADBAND'].data, axes=(1,2,0)) # filling in i
imshow(make_color.make_image(im, band=(x,y,z), scale="auto", return_jpeg=False)) # where x,y,z are the filter indices from above 
To see the raw image: imshow(im[:,:,0])
To see min/max: im[:,:,0].min()/max()
To see the lowest nonzero: numpy.min(im[:,:,0][numpy.nonzero(arr)])
To bring up the lower values: imshow(numpy.log(im[:,:,0]+1e-16))
You can also use the autopercentile argument on make_image which is fun.

